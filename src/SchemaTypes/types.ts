/*
In reality this types will be generated by graphql-codegen from the graph schema through CI & will be used for other clients via npm.
* */

export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  Date: any;
  JSON: any;
  MongoID: any;
};
export type Maybe<T> = T | null;
interface Types {
  id: string;
  title: string;
  body: string;
  createdAt: string;
  comments: CommentConnection;
}

interface Comment {
  id: string;
}
export type CommentConnection = {
  __typename?: "CommentConnection";
  count: Scalars["Int"];
  pageInfo: PageInfo;
  edges: Array<Types>;
};
export type IssueConnection = {
  __typename?: "IssueConnection";
  count: Scalars["Int"];
  pageInfo: PageInfo;
  edges: Array<Types>;
};

export type PageInfo = {
  __typename?: "PageInfo";
  hasNextPage: boolean;
  hasPreviousPage: Scalars["Boolean"];
  startCursor?: Maybe<Scalars["String"]>;
  endCursor?: Maybe<Scalars["String"]>;
};
